{"version":3,"sources":["components/Clock.js","components/Input.js","components/CompletedTodo.js","components/Todo.js","components/TodoList.js","redux/actions/actionType.js","redux/actions/index.js","redux/actions/todoAction.js","App.js","reportWebVitals.js","redux/reducers/todosReducer.js","redux/reducers/index.js","index.js"],"names":["FormattedDate","props","className","date","toLocaleDateString","toLocaleTimeString","Clock","state","Date","this","timer","setInterval","tick","clearInterval","setState","style","color","React","Component","Input","todoText","onChangeTodo","bind","addTodo","e","key","target","value","placeholder","onChange","onKeyUp","CompletedTodo","todos","filter","todo","checked","length","fontWeight","numberOfCompletedTodo","Todo","completedAt","toggleTodo","deleteTodo","id","type","marginLeft","textDecoration","marginRight","onClick","TodoList","todosList","map","types","App","connect","todoReducer","dispatch","actions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","Math","random","store","createStore","combineReducers","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c760f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction FormattedDate(props){\r\n  \r\n    return <div className=\"mb-1\">{props.date.toLocaleDateString()} {props.date.toLocaleTimeString()}</div>\r\n  \r\n}\r\n\r\nclass Clock extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            date : new Date()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(() => this.tick(),1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date : new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div\r\n              className=\"mb-1\"\r\n              style={{\r\n                color : 'rgba(0,0,0,0.6)'\r\n              }}>\r\n                <FormattedDate date = {this.state.date}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, {useState} from 'react'\r\n\r\n// ------------------------------------------------------\r\n// # function(react hooks)을 활용해서 컴포넌트 생성\r\n\r\n// 컴포넌트 내에서 useState로 데이터 관리하기\r\n// function Input(props) {\r\n\r\n//     const [todoText, setTodoText] = useState('');\r\n    \r\n//     return(\r\n\r\n//       <div>\r\n//         <input\r\n//           className=\"w-100 p-2\"\r\n//           placeholder=\"Type todo\"\r\n//           value={todoText}\r\n//           onChange={(e)=>setTodoText(e.target.value)}/>\r\n//       </div>\r\n\r\n//     );\r\n\r\n// }\r\n\r\n// ------------------------------------------------------\r\n// # class를 활용해서 컴포넌트 생성\r\nclass Input extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {\r\n            todoText : ''\r\n        }\r\n\r\n        this.onChangeTodo = this.onChangeTodo.bind(this); \r\n        // bind 하지 않으면 onChangeTodo에서 this는 undefined\r\n        this.addTodo = this.addTodo.bind(this);\r\n        // this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    addTodo(e) {\r\n        if(e.key==='Enter' && e.target.value!==''){\r\n            this.props.addTodo(e.target.value);\r\n            this.setState({\r\n                todoText : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeTodo(e) {\r\n        this.setState({\r\n          todoText : e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input \r\n                  className=\"w-100 p-2\"\r\n                  placeholder=\"Type todo\"\r\n                  value={this.state.todoText}\r\n                  onChange={this.onChangeTodo}\r\n                  onKeyUp={this.addTodo}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nclass CompletedTodo extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    numberOfCompletedTodo() {\r\n        // console.log(this.props.todos);\r\n        return this.props.todos.filter(todo=>todo.checked).length;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div \r\n              className=\"mt-3\"\r\n              style={{\r\n                fontWeight : 'bold'\r\n              }}>\r\n                Completed todo : {this.numberOfCompletedTodo()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompletedTodo","import React from 'react'\r\n\r\nclass Todo extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            completedAt : ''\r\n        }\r\n        this.toggleTodo = this.toggleTodo.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n    }\r\n\r\n    toggleTodo(e) {\r\n        this.props.toggleTodo(this.props.todo.id, e.target.checked);\r\n        const date = new Date();\r\n        if(e.target.checked){\r\n            this.setState({\r\n                completedAt : 'completed at ' + date.toLocaleTimeString()\r\n            });\r\n        }else{\r\n            this.setState({\r\n                completedAt : ''\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteTodo(){\r\n        this.props.deleteTodo(this.props.todo.id);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='mb-2 d-flex'>\r\n                {/* input */}\r\n                <div>\r\n                  <input \r\n                    className=\"mr-3\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.todo.checked}\r\n                    onChange={this.toggleTodo}\r\n                  />\r\n                </div>\r\n\r\n                {/* todo text */}\r\n                <span\r\n                  style={{\r\n                    marginLeft : 10,\r\n                    textDecoration : (this.props.todo.checked ? 'line-through' : '')}}\r\n                    className = {\"ml-3 flex-grow-1 \" + (this.props.todo.checked ? 'text-muted' : '')}\r\n                >{this.props.todo.todoText}</span>\r\n\r\n                {/* is completed */}\r\n                <span\r\n                  className=\"flex-grow-2\"\r\n                  style={{\r\n                    marginRight : \"10px\",\r\n                    color : \"rgba(0,0,0,0.3)\"\r\n                  }}>{this.state.completedAt}</span>\r\n                \r\n                {/* delete button */}\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick = {this.deleteTodo}\r\n                  >Delete\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const todos = this.props.todos;\r\n        const todosList = todos.map(\r\n            (todo) => <Todo \r\n                        key={ todo.id } todo={ todo } \r\n                        toggleTodo={this.props.toggleTodo} \r\n                        deleteTodo={this.props.deleteTodo}/>\r\n        );\r\n        return (\r\n            <div>\r\n                { todosList } \r\n            </div>\r\n        );   \r\n    }\r\n}\r\n\r\n\r\nexport default TodoList","const ADD_TODO = 'ADD_TODO';\r\nconst DELETE_TODO = 'DELETE_TODO';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\n\r\nexport default{\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    TOGGLE_TODO\r\n}","import todoAction from './todoAction';\r\n\r\nexport default{\r\n    todoAction\r\n}\r\n\r\n// export {\r\n//     todoAction\r\n// }\r\n","import types from './actionType.js';\r\n\r\nconst addTodo = (todoText) => ({\r\n    type : types.ADD_TODO,\r\n    todoText\r\n});\r\n\r\nconst deleteTodo = (id) =>({\r\n    type : types.DELETE_TODO,\r\n    id : id\r\n});\r\n\r\nconst toggleTodo = (id,checked) => ({\r\n    type : types.TOGGLE_TODO,\r\n    id : id,\r\n    checked : checked\r\n});\r\n\r\nexport default{\r\n    addTodo,\r\n    deleteTodo,\r\n    toggleTodo\r\n}","// import Todo from '@/components/Todo.js'\r\n// import Today from '@/components/Today.js'\r\n// import CompletedTodo from '@/components/CompletedTodo.js'\r\nimport React from 'react'\r\nimport Clock from './components/Clock'\r\nimport Input from './components/Input'\r\nimport CompletedTodo from './components/CompletedTodo'\r\nimport TodoList from './components/TodoList';\r\n// import {todoAction} from './redux/actions';\r\nimport actions from './redux/actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass App extends React.Component{\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     todos : [\r\n  //       {id : 1, text : 'buy a car', checked :  false, completed : ''},\r\n  //       {id : 2, text : 'play game', checked :  false, completed : ''},\r\n  //       {id : 3, text : 'have dinner', checked :  false, completed : ''}       \r\n  //     ]\r\n  //   }\r\n  //   this.addTodo = this.addTodo.bind(this);\r\n  //   this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n  //   this.deleteTodo = this.deleteTodo.bind(this);\r\n  // }\r\n\r\n  // // Add Todo Object to todos in state\r\n  // addTodo(todoText) {\r\n  //   this.setState({\r\n  //     todos : this.state.todos.concat({\r\n  //       id : Math.random(),\r\n  //       text : todoText,\r\n  //       checked : false,\r\n  //       completed : ''\r\n  //     })\r\n  //   });\r\n  //   // # 해당 로그에서는 todos에 객체 요소를 추가했음에도 추가되지 않은 로그가 나옴 >> setState의 비동기 동작\r\n  // }\r\n\r\n  // // Toggle Checkbox \r\n  // toggleCheckbox(id, checked) {\r\n  //   const { todos }  = this.state;\r\n  //   this.setState({\r\n  //     // map : callback이 return하는 값으로 새로운 배열을 만들어서 리턴\r\n  //     todos : todos.map(\r\n  //       todo => id ===todo.id \r\n  //         ? {...todo, checked : checked } // 기존의 todo 객체를 복사하고 checked 키를 가진 값을 checked로 설정\r\n  //         : todo  \r\n  //     )\r\n  //   });\r\n  // }\r\n\r\n  // // Delete Todo\r\n  // deleteTodo(id){\r\n  //   const { todos }  = this.state;\r\n  //   this.setState({\r\n  //     todos : todos.filter(\r\n  //       todo => todo.id !== id  \r\n  //     )\r\n  //   });\r\n  // }\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     // check는 todo component에서 관리 하도록 refactoring\r\n  //     todos : [\r\n  //       {id : 1, text : 'buy a car', checked :  false, completed : ''},\r\n  //       {id : 2, text : 'play game', checked :  false, completed : ''},\r\n  //       {id : 3, text : 'have dinner', checked :  false, completed : ''}       \r\n  //     ]\r\n  //   }\r\n  //   this.addTodo = this.addTodo.bind(this);\r\n  //   this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n  //   this.deleteTodo = this.deleteTodo.bind(this);\r\n  // }\r\n\r\n  // // Add Todo Object to todos in state\r\n  // addTodo(todoText) {\r\n  //   this.setState({\r\n  //     todos : this.state.todos.concat({\r\n  //       id : Math.random(),\r\n  //       text : todoText,\r\n  //       checked : false,\r\n  //       completed : ''\r\n  //     })\r\n  //   });\r\n  //   // # 해당 로그에서는 todos에 객체 요소를 추가했음에도 추가되지 않은 로그가 나옴 >> setState의 비동기 동작\r\n  // }\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"container\">\r\n        <h1 className=\"text-center mb-3\">Todo App</h1>\r\n        <Clock />\r\n        <Input addTodo={ this.props.addTodo }/>\r\n        <CompletedTodo todos={this.props.todos}/>\r\n        <hr />\r\n        <TodoList\r\n          deleteTodo = {this.props.deleteTodo}\r\n          toggleTodo = {this.props.toggleTodo}\r\n          todos = {this.props.todos}\r\n        ></TodoList>\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\n// component에서 state를 사용할 수 있게 props로 전달\r\nconst mapStateToProps = (state) => {\r\n\r\n  return{\r\n      // state를 사용하기 위해서 어떤 reducer의 state인지 설정해야함\r\n      todos : state.todoReducer.todos\r\n  };\r\n}\r\n\r\n// dispatch 함수를 컨포넌트에서 사용할 수 있게 함수를 props로 전달\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTodo : (todo) => dispatch(actions.todoAction.addTodo(todo)),\r\n  deleteTodo : (id) => dispatch(actions.todoAction.deleteTodo(id)),\r\n  toggleTodo : (id,checked) => dispatch(actions.todoAction.toggleTodo(id,checked))\r\n  // addTodo : (todo) => dispatch(todoAction.addTodo(todo)),\r\n  // deleteTodo : (id) => dispatch(todoAction.deleteTodo(id)),\r\n  // toggleTodo : (id,checked) => dispatch(todoAction.toggleTodo(id,checked))  \r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import types from '../actions/actionType';\r\n\r\nconst initialState = {\r\n\r\n    todos : [\r\n        {id : 1, todoText : 'buy a car', checked :  false},\r\n        {id : 2, todoText : 'play game', checked :  false},\r\n        {id : 3, todoText : 'have dinner', checked :  false}       \r\n    ]\r\n\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case types.ADD_TODO : \r\n            \r\n            return{\r\n                ...state,\r\n                todos : [   \r\n                            ...state.todos,\r\n                            {\r\n                                id : Math.random(),\r\n                                todoText : action.todoText,\r\n                                checked :  false\r\n                            } \r\n                        ]\r\n            };\r\n\r\n        case types.DELETE_TODO :\r\n            return {\r\n                ...state,\r\n                todos : state.todos.filter(todo=>todo.id!==action.id)\r\n            };\r\n        \r\n        case types.TOGGLE_TODO :\r\n            return {\r\n                ...state,\r\n                todos : state.todos.map(\r\n                    todo => todo.id===action.id \r\n                        ? {...todo, checked : action.checked}\r\n                        : todo\r\n                )\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n","import todoReducer from \"./todosReducer\"\r\n\r\nexport default{\r\n    todoReducer\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducers from './redux/reducers';\r\n\r\nconst store = createStore(combineReducers(reducers), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}